{"ast":null,"code":"import _classCallCheck from \"/Users/student/Development/assignment/projects/routeparams-and-context/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/student/Development/assignment/projects/routeparams-and-context/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/student/Development/assignment/projects/routeparams-and-context/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/student/Development/assignment/projects/routeparams-and-context/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/student/Development/assignment/projects/routeparams-and-context/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/student/Development/assignment/projects/routeparams-and-context/src/context/CharacterProvider.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // Provider and Consumer\n\nexport var CharacterContext = React.createContext();\n\nvar CharacterProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CharacterProvider, _Component);\n\n  function CharacterProvider() {\n    var _this;\n\n    _classCallCheck(this, CharacterProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CharacterProvider).call(this));\n\n    _this.getCharacters = function () {\n      axios.get(\"https://rickandmortyapi.com/api/character\").then(function (response) {\n        _this.setState({\n          characters: response.data.results\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      characters: []\n    };\n    return _this;\n  } // Called in App.js on ComponentDidMount\n\n\n  _createClass(CharacterProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CharacterContext.Provider, {\n        value: {\n          characters: this.state.characters,\n          getCharacters: this.getCharacters\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return CharacterProvider;\n}(Component);\n\nexport default CharacterProvider; // Give me your component\n// I will return your component with my values added to it's props\n\nexport var withCharacters = function withCharacters(C) {\n  return function (props) {\n    return React.createElement(CharacterContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, function (value) {\n      return React.createElement(C, Object.assign({}, value, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/student/Development/assignment/projects/routeparams-and-context/src/context/CharacterProvider.js"],"names":["React","Component","axios","CharacterContext","createContext","CharacterProvider","getCharacters","get","then","response","setState","characters","data","results","catch","err","console","log","state","props","children","withCharacters","C","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,gBAAgB,GAAGH,KAAK,CAACI,aAAN,EAAzB;;IAEDC,iB;;;;;AACF,+BAAa;AAAA;;AAAA;;AACT;;AADS,UAQbC,aARa,GAQG,YAAM;AAClBJ,MAAAA,KAAK,CAACK,GAAN,CAAU,2CAAV,EAAuDC,IAAvD,CAA4D,UAAAC,QAAQ,EAAI;AAChE,cAAKC,QAAL,CAAc;AACVC,UAAAA,UAAU,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AADhB,SAAd;AAGH,OAJL,EAKKC,KALL,CAKW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OALd;AAMC,KAfQ;;AAET,UAAKG,KAAL,GAAa;AACTP,MAAAA,UAAU,EAAE;AADH,KAAb;AAFS;AAKZ,G,CAED;;;;;6BAUQ;AACJ,aACG,oBAAC,gBAAD,CAAkB,QAAlB;AACK,QAAA,KAAK,EAAE;AACHA,UAAAA,UAAU,EAAE,KAAKO,KAAL,CAAWP,UADpB;AAEHL,UAAAA,aAAa,EAAE,KAAKA;AAFjB,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKM,KAAKa,KAAL,CAAWC,QALjB,CADH;AASH;;;;EA5B2BnB,S;;AA+BhC,eAAeI,iBAAf,C,CAEA;AACA;;AACA,OAAO,IAAMgB,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,CAAC;AAAA,SAAI,UAAAH,KAAK;AAAA,WACpC,oBAAC,gBAAD,CAAkB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,UAAAI,KAAK;AAAA,aAAI,oBAAC,CAAD,oBAAOA,KAAP,EAAkBJ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KADX,CADoC;AAAA,GAAT;AAAA,CAAxB","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\n// Provider and Consumer\nexport const CharacterContext = React.createContext()\n\nclass CharacterProvider extends Component {\n    constructor(){\n        super()\n        this.state = {\n            characters: []\n        }\n    }\n\n    // Called in App.js on ComponentDidMount\n    getCharacters = () => {\n        axios.get(\"https://rickandmortyapi.com/api/character\").then(response => {\n                this.setState({\n                    characters: response.data.results\n                })\n            })\n            .catch(err => console.log(err))\n        }\n\n    render(){\n        return (\n           <CharacterContext.Provider\n                value={{ \n                    characters: this.state.characters,\n                    getCharacters: this.getCharacters\n                }}>\n               { this.props.children }\n           </CharacterContext.Provider>\n        )\n    }\n}\n\nexport default CharacterProvider\n\n// Give me your component\n// I will return your component with my values added to it's props\nexport const withCharacters = C => props => (\n    <CharacterContext.Consumer>\n         {value => <C {...value} {...props}/>}\n    </CharacterContext.Consumer>\n)"]},"metadata":{},"sourceType":"module"}